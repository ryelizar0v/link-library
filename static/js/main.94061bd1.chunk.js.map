{"version":3,"sources":["components/BottomNav.js","components/Header.js","firebase.js","components/LinkCards.js","components/FormDialog.js","components/EditFormDialog.js","pages/Folder.js","pages/Home.js","pages/Collection.js","pages/Favorites.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","bottomBar","position","bottom","background","palette","primary","main","margin","padding","width","zIndex","BottomNav","props","classes","history","useHistory","useState","value","setValue","listen","location","action","pathname","replace","BottomNavigation","onChange","event","tab","push","className","BottomNavigationAction","label","icon","menuButton","marginRight","spacing","title","flexGrow","display","flexDirection","alignItems","textTransform","Header","AppBar","style","Toolbar","Typography","variant","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","cardContainer","paper","borderColor","light","borderRadius","cardContent","lineHeight","textOverflow","LinkCard","hostName","url","matches","match","getHostName","linkDetails","link_title","link_url","folder_id","folder","link_img","img","date_added","Card","CardActionArea","CardMedia","component","alt","image","CardContent","gutterBottom","noWrap","CardActions","IconButton","size","color","onClick","onClickEdit","docId","contentId","id","updateDelete","onClickDelete","firestore","collection","doc","delete","then","console","log","catch","err","error","text","onCopy","onLinkCopy","fabAdd","right","formInput","root","bottomAppBar","top","Transition","React","forwardRef","ref","Slide","direction","FormDialog","folders","folderDetails","setFolderDetails","useEffect","unsubscribe","onSnapshot","snapshot","newDetails","docs","map","data","useDetails","open","setOpen","handleClose","resetFields","defaultFolder","linkInFolder","setLinkInFolder","linkTitle","setLinkTitle","linkUrl","setLinkUrl","linkImg","setLinkImg","collectionName","setCollectionName","collectionDesc","setCollectionDesc","BottomAppBar","mode","Button","axios","get","res","$","cheerio","load","attr","undefined","children","each","i","link","test","attribs","src","Fab","aria-label","Dialog","fullScreen","TransitionComponent","aria-labelledby","onSubmit","e","preventDefault","add","folder_name","folder_desc","onAdd","Date","DialogTitle","DialogContent","TextField","required","multiline","autoFocus","target","type","helperText","select","option","MenuItem","key","EditFormDialog","onClose","linkId","setLinkId","collection_id","collectionId","setCollectionId","edit","update","onUpdate","folderNameHeader","paddingTop","snackBar","Folder","name","snackbarMessage","setSnackbarMessage","snackbarUndoButton","setSnackbarUndoButton","clickedLinkData","setClickedLinkData","handleLinkDeleteClick","message","setShowForm","handleFormUpdateClick","reason","handleLinkCopy","setTimeout","showForm","handleLinkEditClick","linkData","fetchAll","setLinkDetails","linkRef","orderBy","link_id","where","links","Grid","item","height","windowSize","setWindowSize","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","Container","monitorImagesLoaded","columnWidth","gutterWidth","gutterHeight","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","fontSize","Home","avatar","backgroundColor","secondary","folderIcon","swipeRightContainer","justifyContent","swipeRightAction","alignContent","swipeIcon","swipeLeftContainer","swipeLeftAction","Collection","openSnackbar","setOpenSnackbar","folderId","setFolderId","folderName","setFolderName","folderDesc","setFolderDesc","folderData","handleLinkClick","handleDeleteCollection","desc","deleteCollection","collections","swipeLeft","content","actionAnimation","ActionAnimations","RETURN","swipeRight","REMOVE","blockSwipe","editable","ListItem","button","ListItemAvatar","Avatar","ListItemText","Paper","List","edge","set","Favorites","createMuiTheme","dark","contrastText","typography","subtitle1","fontWeight","h5","letterSpacing","h6","overrides","MuiBottomNavigationAction","App","setTab","ThemeProvider","basename","CssBaseline","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.94061bd1.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { BottomNavigation } from '@material-ui/core';\r\nimport { BottomNavigationAction } from '@material-ui/core';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\tbottomBar: {\r\n\t\tposition: \"fixed\",\r\n\t\tbottom: 0,\r\n\t\tbackground: theme.palette.primary.main,\r\n\t\tmargin: 0,\r\n\t\tpadding: 0,\r\n\t\twidth: \"100vw\",\r\n\t\tzIndex: 100,\r\n\t}\r\n}))\r\n\r\nfunction BottomNav(props) {\r\n\r\n\tconst classes = useStyles()\r\n\tconst history = useHistory()\r\n\tconst [value, setValue] = useState(props.value)\r\n\tconst handleChange = (event, tab) => { \r\n\t\thistory.push(`/${tab}`)\r\n\t\tsetValue(tab)\r\n\t\tprops.onChange(tab)\r\n\t}\r\n\t\r\n\thistory.listen((location, action) => {\r\n\t\tif (action === \"POP\") setValue(location.pathname.replace(\"/\", \"\"))\r\n\t})\r\n\r\n\treturn (\r\n\t\t<BottomNavigation \r\n\t\t\tvalue={value} \r\n\t\t\tonChange={handleChange} \r\n\t\t\tclassName={classes.bottomBar}\r\n\t\t>\r\n\t\t\t<BottomNavigationAction label=\"Home\" value=\"\" icon={<HomeIcon />} />\r\n\t\t\t<BottomNavigationAction label=\"Collection\" value=\"collection\" icon={<FolderIcon />} />\r\n\t\t\t<BottomNavigationAction label=\"Favorites\" value=\"favorites\" icon={<FavoriteIcon />} />\r\n\t\t\t<BottomNavigationAction label=\"Settings\" value=\"settings\" icon={<SettingsIcon />} />\r\n\t\t</BottomNavigation>\r\n\t);\r\n}\r\n\r\nexport default BottomNav","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BookmarksIcon from '@material-ui/icons/Bookmarks';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-start\",\r\n    textTransform: \"uppercase\"\r\n  }\r\n}));\r\n\r\nfunction Header(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" style={{zIndex: 10000}}>\r\n      <Toolbar>\r\n        <BookmarksIcon style={{marginRight: 8}}/>\r\n        <div className={classes.title}>\r\n          <Typography variant=\"h5\">\r\n            {props.title}\r\n          </Typography>\r\n        </div>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default Header;","import firebase from \"firebase/app\"\r\nimport \"firebase/firestore\"\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyBaF7HPX0cehZsg5R1uaPwn-g-c8lO35Tk\",\r\n  authDomain: \"link-library-5cfc6.firebaseapp.com\",\r\n  databaseURL: \"https://link-library-5cfc6.firebaseio.com\",\r\n  projectId: \"link-library-5cfc6\",\r\n  storageBucket: \"link-library-5cfc6.appspot.com\",\r\n  messagingSenderId: \"405205691939\",\r\n  appId: \"1:405205691939:web:a040686ea827173f210b96\",\r\n  measurementId: \"G-3J7Y752GEE\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase","import React from \"react\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport { Card,\r\n\tCardActionArea,\r\n\tCardActions,\r\n\tCardContent,\r\n\tCardMedia,\r\n\tTypography\r\n} from \"@material-ui/core\"\r\nimport DeleteIcon from \"@material-ui/icons/Delete\"\r\nimport EditIcon from \"@material-ui/icons/Edit\"\r\nimport LinkIcon from '@material-ui/icons/Link'\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport firebase from \"../firebase\"\r\n\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\tcardContainer: {\r\n\t\tbackground: theme.palette.background.paper,\r\n\t\twidth: \"100%\",\r\n\t\tborderColor: theme.palette.primary.light,\r\n\t\tborderRadius: theme.spacing(1)\r\n\t},\r\n\tcardContent: {\r\n\t\tlineHeight: 1.25,\r\n\t\ttextOverflow: \"ellipsis\"\r\n\t}\r\n}))\r\n\r\nconst LinkCard = props => {\r\n\r\n\tconst classes = useStyles()\r\n\tlet hostName = getHostName(props.url)\r\n\tconst linkDetails = {\r\n\t\tlink_title: props.title,\r\n\t\tlink_url: props.url,\r\n\t\tfolder_id: props.folder,\r\n\t\tlink_img: props.img,\r\n\t\tdate_added: props.date_added\r\n\t}\r\n\r\n\tconst handleDeleteLinkCard = (id, updateDelete) => {\r\n\t\tfirebase.firestore()\r\n\t\t.collection(\"links\")\r\n\t\t.doc(id)\r\n\t\t.delete()\r\n\t\t.then(() => {\r\n\t\t\tupdateDelete(\"Link successfully deleted\", linkDetails)\r\n\t\t\tconsole.log(\"Success\")\r\n\t\t}).catch((err) => {\r\n\t\t\tupdateDelete(\"Error deleting link\", linkDetails)\r\n\t\t\tconsole.error(\"Error removing document: \", err)\r\n\t\t}) \r\n\t}\r\n\r\n\treturn (\r\n\t\t<Card variant=\"outlined\" className={classes.cardContainer} >\r\n\t\t\t<CardActionArea>\r\n\t\t\t\t{props.img !== \"\" \r\n\t\t\t\t\t? (\r\n\t\t\t\t\t\t<CardMedia\r\n\t\t\t\t\t\t\tcomponent=\"img\"\r\n\t\t\t\t\t\t\talt={props.title}\r\n\t\t\t\t\t\t\timage={props.img}\r\n\t\t\t\t\t\t\ttitle={props.title}\r\n\t\t\t\t\t\t/> \r\n\t\t\t\t\t) : ( \"\" )\r\n\t\t\t\t}\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t<Typography variant=\"overline\">{hostName}</Typography>\r\n\t\t\t\t\t<Typography className={classes.cardContent} variant=\"subtitle1\" gutterBottom>{props.title}</Typography>\r\n\t\t\t\t\t<Typography noWrap className={classes.cardContent} variant=\"caption\" gutterBottom>{props.url}</Typography>\r\n\t\t\t\t</CardContent>\r\n\t\t\t</CardActionArea>\r\n\t\t\t<CardActions>\r\n\t\t\t\t<IconButton size=\"small\" color=\"primary\"\r\n\t\t\t\t\tonClick={() => props.onClickEdit({docId: props.contentId, ...linkDetails})}>\r\n\t\t\t\t\t<EditIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t\t<IconButton size=\"small\" color=\"primary\"\r\n\t\t\t\t\tonClick={() => handleDeleteLinkCard(props.contentId, props.onClickDelete)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<DeleteIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t\t<CopyToClipboard text={props.url} onCopy={() => props.onLinkCopy(\"Link URL copied to clipboard\")}>\r\n\t\t\t\t\t<IconButton size=\"small\" color=\"primary\">\r\n\t\t\t\t\t\t<LinkIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</CopyToClipboard>\r\n\t\t\t\t\r\n\t\t\t</CardActions>\r\n\t\t</Card>\r\n\t)\r\n}\r\n\r\nfunction getHostName(url) {\r\n\tconst matches = url.match(/^https?:\\/\\/(www.)?([^/?#]+)(?:[/?#]|$)/i)\r\n\treturn matches && matches[2]\r\n}\r\n\r\nexport default LinkCard","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { makeStyles, AppBar, Toolbar, Container } from '@material-ui/core';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { useState, useEffect } from \"react\"\r\nimport { Slide } from \"@material-ui/core\"\r\n\r\nimport firebase from \"../firebase\"\r\nimport axios from \"axios\"\r\nimport cheerio from \"cheerio\"\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  fabAdd: {\r\n\t\tposition: \"fixed\",\r\n\t\tbottom: theme.spacing(9),\r\n\t\tright: theme.spacing(2),\r\n\t\tzIndex: 1000\r\n  },\r\n  formInput: {\r\n    width: \"100%\",\r\n    margin: theme.spacing(1,0)\r\n  },\r\n  root: {\r\n    padding: theme.spacing(8, 0, 18, 0)\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  bottomAppBar: {\r\n    top: \"auto\",\r\n    bottom: 0\r\n  },\r\n}))\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"left\" ref={ref} {...props} />\r\n})\r\n\r\nexport default function FormDialog(props) {\r\n\r\n  console.log(\"FORM DIALOG PROPS: \", props)\r\n  const classes = useStyles();\r\n  const folders = useDetails()\r\n  const [open, setOpen] = useState(false)\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    resetFields()\r\n    setOpen(false)\r\n  }\r\n\r\n  const [linkInFolder, setLinkInFolder] = useState(props.defaultFolder)\r\n  const [linkTitle, setLinkTitle] = useState(\"\")\r\n  const [linkUrl, setLinkUrl] = useState(\"\")\r\n  const [linkImg, setLinkImg] = useState(\"\")\r\n\r\n  const handleFolderSelect = e => {\r\n    setLinkInFolder(e.target.value)\r\n  }\r\n\r\n  const handleTitleInput = e => {\r\n    setLinkTitle(e.target.value)\r\n  }\r\n\r\n  const handleUrlInput = e => {\r\n    setLinkUrl(e.target.value)\r\n  }\r\n\r\n  const [collectionName, setCollectionName] = useState(\"\")\r\n  const [collectionDesc, setCollectionDesc] = useState(\"\")\r\n\r\n  const handleCollectionNameInput = e => {\r\n    setCollectionName(e.target.value)\r\n  }\r\n\r\n  const handleCollectionDescInput = e => {\r\n    setCollectionDesc(e.target.value)\r\n  }\r\n\r\n  const handleFormSubmit = e => {\r\n\r\n    e.preventDefault()\r\n    switch(props.mode) {\r\n      case \"collection\": {\r\n        firebase.firestore()\r\n        .collection(\"collections\")\r\n        .add({\r\n          folder_name: collectionName,\r\n          folder_desc: collectionDesc\r\n        }).then(() => {\r\n          props.onAdd(\"Collection successfully created\")\r\n          console.log(\"Collection successfully added\")\r\n        }).catch(err => {\r\n          props.onAdd(\"Error creating collection\")\r\n          console.error(\"Error adding collection: \", err)\r\n        })\r\n        break\r\n      }\r\n      default: \r\n        firebase.firestore()\r\n          .collection(\"links\")\r\n          .add({\r\n            link_title: linkTitle,\r\n            link_url: linkUrl,\r\n            folder_id: linkInFolder,\r\n            link_img: linkImg,\r\n            date_added: new Date()\r\n          }).then(() => {\r\n            props.onAdd(\"Link successfully added\")\r\n            console.log(\"Link successfully added\")\r\n          }).catch(err => {\r\n            props.onAdd(\"Error adding link: \", err)\r\n            console.error(\"Error adding to database: \", err)\r\n          })\r\n    }\r\n    resetFields()\r\n    setOpen(false)\r\n    \r\n  }\r\n\r\n  function resetFields() {\r\n    setLinkInFolder(props.defaultFolder)\r\n    setLinkTitle(\"\")\r\n    setLinkUrl(\"\")\r\n    setCollectionName(\"\")\r\n    setCollectionDesc(\"\")\r\n  }\r\n\r\n  const handleGetDetails = (url) => {\r\n    axios.get(\"https://cors-anywhere.herokuapp.com/\" + url)\r\n      .then(\r\n        res => {\r\n          console.log(res.data)\r\n          const $ = cheerio.load(res.data)\r\n          let title = $(\"meta[property='og:title']\").attr(\"content\")\r\n          if(title === undefined) title = $('title')[0].children[0].data\r\n          if(title === undefined) title = \"\"\r\n          let img = $(\"meta[property='og:image']\").attr(\"content\")\r\n          if(img === undefined) img = $(\"meta[property='twitter:image']\").attr(\"content\")\r\n          if(img === undefined) {\r\n            $(\"img\").each((i, link) => {\r\n              if(/^https:\\/\\//.test(link.attribs.src)) {\r\n                img = link.attribs.src\r\n              }\r\n            })\r\n          }\r\n          if(img === undefined) img = \"\"\r\n          \r\n          setLinkImg(img)\r\n          setLinkTitle(title)\r\n      })\r\n  }\r\n\r\n  const BottomAppBar = () => {\r\n    return (\r\n      <AppBar position=\"fixed\" color=\"secondary\" className={classes.bottomAppBar}>\r\n        <Toolbar>\r\n          {props.mode === \"link\" ? (\r\n            <Button className={classes.icon} onClick={() => handleGetDetails(linkUrl)} >\r\n              <DescriptionIcon className={classes.icon} /> Get details\r\n            </Button>\r\n          ) : ( \"\" )}\r\n          <Button onClick={handleClose} >\r\n            <CancelIcon className={classes.icon} /> Cancel\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Fab color=\"secondary\" aria-label=\"add\"\r\n        className={classes.fabAdd}\r\n        onClick={handleClickOpen}\r\n      >\r\n        <AddIcon />\r\n      </Fab>\r\n      <Dialog fullScreen open={open}\r\n        TransitionComponent={Transition} \r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <form onSubmit={handleFormSubmit} >\r\n        <div className={classes.root}>\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            Add new {props.mode === \"collection\" ? props.mode : \"link\"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            {props.mode === \"collection\"\r\n              ? <>\r\n                  <TextField\r\n                    required\r\n                    multiline\r\n                    autoFocus\r\n                    className={classes.formInput}\r\n                    id=\"collection-name\"\r\n                    label=\"Collection name\"\r\n                    variant=\"outlined\"\r\n                    value={collectionName}\r\n                    onChange={handleCollectionNameInput}\r\n                    size=\"small\"\r\n                  />\r\n                  <TextField\r\n                    multiline\r\n                    className={classes.formInput}\r\n                    id=\"collection-desc\"\r\n                    label=\"Collection description\"\r\n                    variant=\"outlined\"\r\n                    value={collectionDesc}\r\n                    onChange={handleCollectionDescInput}\r\n                    size=\"small\"\r\n                  />\r\n              </> : <>\r\n                  <TextField\r\n                    multiline\r\n                    className={classes.formInput}\r\n                    id={\"link-title\"}\r\n                    label=\"Link title\"\r\n                    variant=\"outlined\"\r\n                    value={linkTitle}\r\n                    onChange={handleTitleInput}\r\n                    size=\"small\"\r\n                  />\r\n                  <TextField\r\n                    required\r\n                    multiline\r\n                    autoFocus\r\n                    type=\"url\"\r\n                    className={classes.formInput}\r\n                    id=\"link-url\"\r\n                    label=\"Link URL\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    value={linkUrl}\r\n                    onChange={handleUrlInput}\r\n                    helperText=\"URL must start with http:// or https://\"\r\n                  />\r\n                  <TextField\r\n                    className={classes.formInput}\r\n                    id=\"link-in-folder-id\"\r\n                    select\r\n                    label=\"Collection\"\r\n                    value={linkInFolder}\r\n                    onChange={handleFolderSelect}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                  >\r\n                    {folders.map((option) => (\r\n                        <MenuItem \r\n                          key={option.folder_id} \r\n                          value={option.folder_id}\r\n                        >\r\n                          {option.folder_name}\r\n                        </MenuItem>\r\n                    ))}\r\n                  </TextField>\r\n                  {/* <Container style={{\r\n                    marginTop: 8,\r\n                    width: \"100%\",\r\n                    height: 200,\r\n                    objectFit: \"contain\",\r\n                  }}>\r\n                    Link image preview: \r\n                    <img width={\"100%\"} height={200} src={linkImg}></img>\r\n                  </Container> */}\r\n                </>\r\n            }\r\n          </DialogContent>\r\n          </div>\r\n          <Fab color=\"secondary\" aria-label=\"add\"\r\n            className={classes.fabAdd}\r\n            type=\"submit\"\r\n            variant=\"extended\"\r\n          >\r\n            <SaveIcon className={classes.icon} /> Save\r\n          </Fab>\r\n        </form>\r\n        <BottomAppBar />\r\n      </Dialog>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nfunction useDetails() {\r\n\tconst [folderDetails, setFolderDetails] = useState([])\r\n\r\n\tuseEffect(() => {\r\n    const unsubscribe = firebase\r\n\t\t\t.firestore()\r\n\t\t\t.collection(\"collections\")\r\n\t\t\t.onSnapshot((snapshot) => {\r\n\t\t\t\tconst newDetails = snapshot.docs.map((doc) => ({\r\n\t\t\t\t\tfolder_id: doc.id,\r\n\t\t\t\t\t...doc.data()\r\n\t\t\t\t}))\r\n\t\t\t\tsetFolderDetails(newDetails)\r\n\t\t\t})\r\n        \r\n      return () => unsubscribe()\r\n    }, [])\r\n    \r\n    return folderDetails\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { makeStyles, AppBar, Toolbar } from '@material-ui/core';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { useState, useEffect } from \"react\"\r\nimport { Slide } from \"@material-ui/core\"\r\n\r\nimport firebase from \"../firebase\"\r\nimport axios from \"axios\"\r\nimport cheerio from \"cheerio\"\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  fabAdd: {\r\n\t\tposition: \"fixed\",\r\n\t\tbottom: theme.spacing(9),\r\n\t\tright: theme.spacing(2),\r\n\t\tzIndex: 1000\r\n  },\r\n  formInput: {\r\n    width: \"100%\",\r\n    margin: theme.spacing(1,0)\r\n  },\r\n  root: {\r\n    padding: theme.spacing(8, 0, 18, 0)\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  bottomAppBar: {\r\n    top: \"auto\",\r\n    bottom: 0\r\n  },\r\n}))\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"left\" ref={ref} {...props} />\r\n})\r\n\r\nconst EditFormDialog = props => {\r\n\r\n  const classes = useStyles()\r\n  const folders = useDetails()\r\n  \r\n  const handleClose = () => {\r\n    resetFields()\r\n    setOpen(false)\r\n    props.mode === \"collection\" && props.onClose(false)\r\n  }\r\n\r\n  const [linkInFolder, setLinkInFolder] = useState(props.folder_id)\r\n  const [linkTitle, setLinkTitle] = useState(props.link_title)\r\n  const [linkUrl, setLinkUrl] = useState(props.link_url)\r\n  const [linkImg, setLinkImg] = useState(props.link_img)\r\n  const [linkId, setLinkId] = useState(props.docId)\r\n  const [collectionId, setCollectionId] = useState(props.collection_id)\r\n  const [collectionName, setCollectionName] = useState(props.folder_name)\r\n  const [collectionDesc, setCollectionDesc] = useState(props.folder_desc)\r\n  const [open, setOpen] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setLinkInFolder(props.folder_id)\r\n    setLinkTitle(props.link_title)\r\n    setLinkUrl(props.link_url)\r\n    setLinkImg(props.link_img)\r\n    setLinkId(props.docId)\r\n    setOpen(props.edit)\r\n    setCollectionId(props.collection_id)\r\n    setCollectionName(props.folder_name)\r\n    setCollectionDesc(props.folder_desc)\r\n  }, [\r\n    props.folder_id,\r\n    props.link_title,\r\n    props.link_url,\r\n    props.link_img,\r\n    props.edit,\r\n    props.docId,\r\n    props.collection_id,\r\n    props.folder_name,\r\n    props.folder_desc\r\n  ])\r\n\r\n  const handleFolderSelect = e => {\r\n    setLinkInFolder(e.target.value)\r\n  }\r\n\r\n  const handleTitleInput = e => {\r\n    setLinkTitle(e.target.value)\r\n  }\r\n\r\n  const handleUrlInput = e => {\r\n    setLinkUrl(e.target.value)\r\n  }\r\n\r\n  const handleCollectionNameInput = e => {\r\n    setCollectionName(e.target.value)\r\n  }\r\n\r\n  const handleCollectionDescInput = e => {\r\n    setCollectionDesc(e.target.value)\r\n  }\r\n\r\n  const handleFormSubmit = e => {\r\n\r\n    e.preventDefault()\r\n    switch(props.mode) {\r\n      case \"collection\": {\r\n        firebase.firestore()\r\n        .collection(\"collections\")\r\n        .doc(collectionId)\r\n        .update({\r\n          folder_name: collectionName,\r\n          folder_desc: collectionDesc\r\n        }).then(() => {\r\n          props.onUpdate(\"Collection successfully updated\")\r\n          console.log(\"Collection successfully updated\")\r\n        }).catch(err => {\r\n          props.onUpdate(\"Error updating collection\")\r\n          console.error(\"Error adding collection: \", err)\r\n        })\r\n        break\r\n      }\r\n      default: \r\n        firebase.firestore()\r\n          .collection(\"links\")\r\n          .doc(linkId)\r\n          .update({\r\n            link_title: linkTitle,\r\n            link_url: linkUrl,\r\n            folder_id: linkInFolder,\r\n            link_img: linkImg,\r\n            date_added: new Date()\r\n          }).then(() => {\r\n            props.onAdd(\"Link successfully updated\")\r\n            console.log(\"Link successfully updated\")\r\n          }).catch(err => {\r\n            props.onAdd(\"Error updating link: \", err)\r\n            console.error(\"Error updating link on database: \", err)\r\n          })\r\n    }\r\n    resetFields()\r\n    setOpen(false)\r\n    \r\n  }\r\n\r\n  function resetFields() {\r\n    setLinkInFolder(props.folder_id)\r\n    setLinkTitle(\"\")\r\n    setLinkUrl(\"\")\r\n    setCollectionName(\"\")\r\n    setCollectionDesc(\"\")\r\n  }\r\n\r\n  const handleGetDetails = (url) => {\r\n    axios.get(\"https://cors-anywhere.herokuapp.com/\" + url)\r\n      .then(\r\n        res => {\r\n          console.log(res.data)\r\n          const $ = cheerio.load(res.data)\r\n          let title = $(\"meta[property='og:title']\").attr(\"content\")\r\n          if(title === undefined) title = $('title')[0].children[0].data\r\n          if(title === undefined) title = \"\"\r\n          let img = $(\"meta[property='og:image']\").attr(\"content\")\r\n          if(img === undefined) img = $(\"meta[property='twitter:image']\").attr(\"content\")\r\n          if(img === undefined) {\r\n            $(\"img\").each((i, link) => {\r\n              if(/^https:\\/\\//.test(link.attribs.src)) {\r\n                img = link.attribs.src\r\n              }\r\n            })\r\n          }\r\n          if(img === undefined) img = \"\"\r\n          \r\n          setLinkImg(img)\r\n          setLinkTitle(title)\r\n      })\r\n  }\r\n\r\n  const BottomAppBar = () => {\r\n    return (\r\n      <AppBar position=\"fixed\" color=\"secondary\" className={classes.bottomAppBar}>\r\n        <Toolbar>\r\n          {props.mode === \"link\" ? (\r\n            <Button className={classes.icon} onClick={() => handleGetDetails(linkUrl)} >\r\n              <DescriptionIcon className={classes.icon} /> Get details\r\n            </Button>\r\n          ) : ( \"\" )}\r\n          <Button onClick={handleClose} >\r\n            <CancelIcon className={classes.icon} /> Cancel\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Dialog fullScreen open={open}\r\n        TransitionComponent={Transition} \r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <form onSubmit={handleFormSubmit} >\r\n        <div className={classes.root}>\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            Edit {props.mode === \"collection\" ? props.mode : \"link\"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            {props.mode === \"collection\"\r\n              ? <>\r\n                  <TextField\r\n                    required\r\n                    multiline\r\n                    autoFocus\r\n                    className={classes.formInput}\r\n                    id=\"collection-name\"\r\n                    label=\"Collection name\"\r\n                    variant=\"outlined\"\r\n                    value={collectionName}\r\n                    onChange={handleCollectionNameInput}\r\n                    size=\"small\"\r\n                  />\r\n                  <TextField\r\n                    multiline\r\n                    className={classes.formInput}\r\n                    id=\"collection-desc\"\r\n                    label=\"Collection description\"\r\n                    variant=\"outlined\"\r\n                    value={collectionDesc}\r\n                    onChange={handleCollectionDescInput}\r\n                    size=\"small\"\r\n                  />\r\n              </> : <>\r\n                  <TextField\r\n                    multiline\r\n                    className={classes.formInput}\r\n                    id={\"link-title\"}\r\n                    label=\"Link title\"\r\n                    variant=\"outlined\"\r\n                    value={linkTitle}\r\n                    onChange={handleTitleInput}\r\n                    size=\"small\"\r\n                  />\r\n                  <TextField\r\n                    required\r\n                    multiline\r\n                    autoFocus\r\n                    type=\"url\"\r\n                    className={classes.formInput}\r\n                    id=\"link-url\"\r\n                    label=\"Link URL\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    value={linkUrl}\r\n                    onChange={handleUrlInput}\r\n                    helperText=\"URL must start with http:// or https://\"\r\n                  />\r\n                  <TextField\r\n                    className={classes.formInput}\r\n                    id=\"link-in-folder-id\"\r\n                    select\r\n                    label=\"Collection\"\r\n                    value={linkInFolder}\r\n                    onChange={handleFolderSelect}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                  >\r\n                    {folders.map((option) => (\r\n                        <MenuItem \r\n                          key={option.folder_id} \r\n                          value={option.folder_id}\r\n                        >\r\n                          {option.folder_name}\r\n                        </MenuItem>\r\n                    ))}\r\n                  </TextField>\r\n                  {/* <Container style={{\r\n                    marginTop: 8,\r\n                    width: \"100%\",\r\n                    height: 200,\r\n                    objectFit: \"contain\",\r\n                  }}>\r\n                    Link image preview: \r\n                    <img width={\"100%\"} height={200} src={linkImg}></img>\r\n                  </Container> */}\r\n                </>\r\n            }\r\n          </DialogContent>\r\n          </div>\r\n          <Fab color=\"secondary\" aria-label=\"add\"\r\n            className={classes.fabAdd}\r\n            type=\"submit\"\r\n            variant=\"extended\"\r\n          >\r\n            <SaveIcon className={classes.icon} /> Save\r\n          </Fab>\r\n        </form>\r\n        <BottomAppBar />\r\n      </Dialog>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nfunction useDetails() {\r\n\tconst [folderDetails, setFolderDetails] = useState([])\r\n\r\n\tuseEffect(() => {\r\n    const unsubscribe = firebase\r\n\t\t\t.firestore()\r\n\t\t\t.collection(\"collections\")\r\n\t\t\t.onSnapshot((snapshot) => {\r\n\t\t\t\tconst newDetails = snapshot.docs.map((doc) => ({\r\n\t\t\t\t\tfolder_id: doc.id,\r\n\t\t\t\t\t...doc.data()\r\n\t\t\t\t}))\r\n\t\t\t\tsetFolderDetails(newDetails)\r\n\t\t\t})\r\n        \r\n      return () => unsubscribe()\r\n    }, [])\r\n    \r\n    return folderDetails\r\n}\r\n\r\nexport default EditFormDialog","import React from \"react\"\r\nimport { useState, useEffect } from \"react\"\r\nimport firebase from \"../firebase\"\r\nimport { Grid, makeStyles, Typography, Container, Button } from \"@material-ui/core\"\r\nimport StackGrid from \"react-stack-grid\"\r\nimport LinkCard from \"../components/LinkCards\"\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport FormDialog from \"../components/FormDialog\"\r\nimport EditFormDialog from \"../components/EditFormDialog\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n\t\twidth: `calc(100vw - ${theme.spacing(2)}px)`,\r\n    margin: theme.spacing(9,1,18,1)\r\n  },\r\n  folderNameHeader: {\r\n    background: theme.palette.background.paper,\r\n    position: \"sticky\",\r\n    top: theme.spacing(7),\r\n    zIndex: 5,\r\n    paddingTop: theme.spacing(2)\r\n  },\r\n  snackBar: {\r\n\t\tposition: \"fixed\",\r\n\t\tbottom: theme.spacing(18)\r\n\t}\r\n}))\r\n\r\nconst Folder = ({ id, name, ...props}) => {\r\n\r\n  const [open, setOpen] = useState(false)\r\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\")\r\n  const [snackbarUndoButton, setSnackbarUndoButton] = useState(true)\r\n  const [clickedLinkData, setClickedLinkData] = useState({})\r\n  \r\n  const handleLinkDeleteClick = (message, data) => {\r\n    setOpen(true)\r\n    setShowForm(false)\r\n    setSnackbarMessage(message)\r\n    setClickedLinkData(data)\r\n    setSnackbarUndoButton(true)\r\n  }\r\n\r\n  const handleFormUpdateClick = (message) => {\r\n    setSnackbarUndoButton(false)\r\n    setOpen(true)\r\n    setSnackbarMessage(message)\r\n    setShowForm(false)\r\n  }\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return\r\n    }\r\n    setOpen(false)\r\n  }\r\n  \r\n  const handleUndo = () => {\r\n    \r\n    firebase.firestore()\r\n      .collection(\"links\")\r\n      .add(clickedLinkData)\r\n      .then(() => console.log(\"Link delete undone\"))\r\n      .catch(err => console.error(\"Error encountered: \", err))\r\n    \r\n    setOpen(false)\r\n\r\n    setTimeout(() => {\r\n      setOpen(true)\r\n      setSnackbarUndoButton(false)\r\n      setSnackbarMessage(\"Link restored\")\r\n    }, 500)\r\n  }\r\n\r\n  const handleLinkCopy = message => {\r\n    setOpen(false)\r\n    setTimeout(() => {\r\n      setSnackbarUndoButton(false)\r\n      setOpen(true)\r\n      setSnackbarMessage(message)\r\n    })\r\n  }\r\n\r\n  // EDIT FORM\r\n  const [showForm, setShowForm] = useState(false)\r\n\r\n  const handleLinkEditClick = data => {\r\n    setShowForm(true)\r\n    setClickedLinkData(data)\r\n    console.log(\"EDIT THIS: \", data)\r\n  }\r\n  \r\n  const linkData = useDetails(id, props.fetchAll)\r\n  const classes = useStyles()\r\n  const links = linkData.map((link) => (\r\n    <Grid item key={link.link_id}>\r\n      <LinkCard \r\n        contentId={link.link_id}\r\n        title={link.link_title}\r\n        url={link.link_url}\r\n        img={link.link_img}\r\n        folder={link.folder_id}\r\n        date_added={link.date_added}\r\n        onClickDelete={handleLinkDeleteClick}\r\n        onClickEdit={handleLinkEditClick}\r\n        onLinkCopy={handleLinkCopy}\r\n      />\r\n    </Grid>\r\n  ))\r\n  \r\n  const size = useWindowSize()\r\n  const cardWidth = () => {\r\n    if (size.width < 321) return \"100%\"\r\n    else if (size.width < 426) return \"50%\"\r\n    else if (size.width < 769) return \"33.3333333%\"\r\n    else if (size.width < 1025) return \"25%\"\r\n    else return \"20%\"\r\n  }\r\n    \r\n  return (\r\n    <>\r\n      {/* //{id !== \"3ppmoaOw6ANJk10oWmhh\"\r\n        ? ( */}\r\n          <Container className={classes.folderNameHeader}>\r\n            <Typography variant=\"h6\" gutterBottom>{name}</Typography>\r\n          </Container>\r\n        {/* ) : ( \"\" )\r\n      } */}\r\n      <div className={classes.root} >\r\n        <StackGrid \r\n          monitorImagesLoaded={true}\r\n          columnWidth = {cardWidth()}\r\n          gutterWidth={8}\r\n          gutterHeight={8}\r\n        >\r\n          {links}\r\n        </StackGrid>\r\n        <Snackbar\r\n          className={classes.snackBar}\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n          }}\r\n          open={open}\r\n          autoHideDuration={5000}\r\n          onClose={handleClose}\r\n          message={snackbarMessage}\r\n          action={\r\n            <>\r\n              {snackbarUndoButton ? (\r\n                <Button color=\"secondary\" aria-label=\"undo-delete\" onClick={handleUndo}>\r\n                  Undo\r\n                </Button>\r\n              ) : ( \"\" )}\r\n              <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\r\n                <CloseIcon fontSize=\"small\" />\r\n              </IconButton>\r\n            </>\r\n          }\r\n        />\r\n      </div>\r\n      <FormDialog mode={\"link\"} onAdd={handleFormUpdateClick} defaultFolder={id}/>\r\n      <EditFormDialog mode={\"link\"} onAdd={handleFormUpdateClick} edit={showForm} {...clickedLinkData} />\r\n    </>\r\n  )\r\n}\r\n\r\nfunction useWindowSize() {\r\n  // Initialize state with undefined width/height so server and client renders match\r\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\r\n  const [windowSize, setWindowSize] = useState({\r\n      width: undefined,\r\n      height: undefined,\r\n  })\r\n\r\n  useEffect(() => {\r\n      // Handler to call on window resize\r\n      function handleResize() {\r\n      // Set window width/height to state\r\n          setWindowSize({\r\n              width: window.innerWidth,\r\n              height: window.innerHeight,\r\n          })\r\n      }\r\n      // Add event listener\r\n      window.addEventListener(\"resize\", handleResize);\r\n      // Call handler right away so state gets updated with initial window size\r\n      handleResize()\r\n      // Remove event listener on cleanup\r\n      return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []) // Empty array ensures that effect is only run on mount\r\n\r\n  return windowSize;\r\n}\r\n\r\nfunction useDetails(id, fetchAll) {\r\n\r\n\tconst [linkDetails, setLinkDetails] = useState([])\r\n\r\n\tuseEffect(() => {\r\n    const linkRef = firebase.firestore().collection(\"links\")\r\n    if(fetchAll === true) {\r\n      linkRef.orderBy(\"date_added\", \"desc\").onSnapshot((snapshot) => {\r\n\t\t\t\tconst newDetails = snapshot.docs.map((doc) => ({\r\n\t\t\t\t\tlink_id: doc.id,\r\n\t\t\t\t\t...doc.data()\r\n\t\t\t\t}))\r\n\t\t\t\tsetLinkDetails(newDetails)\r\n\t\t\t})\r\n    } else {\r\n      linkRef.where(\"folder_id\", \"==\", id)\r\n      .onSnapshot(snapshot => {\r\n        const newDetails = snapshot.docs.map((doc) => ({\r\n          link_id: doc.id,\r\n          ...doc.data()\r\n        }))\r\n        setLinkDetails(newDetails)\r\n      })\r\n    }\r\n    return () => linkRef\r\n  }, [id, fetchAll])\r\n\r\n  // TO-DO: CLEANUP FUNCTION\r\n  \r\n  console.log(\"Function useDetails() in Folder.js called\")\r\n\t\r\n\treturn linkDetails\r\n}\r\n\r\nexport default Folder","import React from \"react\"\r\nimport Header from \"../components/Header\"\r\nimport Folder from \"./Folder\"\r\n\r\nfunction Home() {\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Header title={\"Link library\"} />\r\n\t\t\t<Folder id={\"3ppmoaOw6ANJk10oWmhh\"} fetchAll={true}/>\r\n\t\t</>\r\n\t)\r\n\t// TO-DO: REMOVE HARDCODED DEFAULT ID\r\n}\r\n\r\nexport default Home","import React, { useState, useEffect } from 'react'\r\nimport { \r\n  makeStyles,\r\n  List, \r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Avatar,\r\n  IconButton,\r\n  Grid,\r\n  Dialog,\r\n  AppBar,\r\n  Toolbar,\r\n  Slide,\r\n  Paper,\r\n  Typography,\r\n  Snackbar,\r\n  Button\r\n} from \"@material-ui/core\"\r\n\r\nimport FolderIcon from '@material-ui/icons/Folder'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport MoreIcon from '@material-ui/icons/MoreVert'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\r\n\r\nimport StackGrid from \"react-stack-grid\"\r\nimport firebase from \"../firebase\"\r\nimport Folder from './Folder'\r\nimport Header from '../components/Header'\r\nimport FormDialog from '../components/FormDialog'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\n\r\nimport { SwipeableListItem, ActionAnimations } from '@sandstreamdev/react-swipeable-list'\r\nimport '@sandstreamdev/react-swipeable-list/dist/styles.css'\r\nimport EditFormDialog from '../components/EditFormDialog'\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n\t\twidth: `calc(100vw - ${theme.spacing(4)}px)`,\r\n    margin: theme.spacing(9, 2, 18, 2),\r\n    zIndex: 0\r\n  },\r\n  title: {\r\n    margin: theme.spacing(4, 0, 2),\r\n  },\r\n  bottomAppBar: {\r\n    top: \"auto\",\r\n    bottom: 0\r\n  },\r\n  avatar: {\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  folderIcon: {\r\n    color: theme.palette.primary.main\r\n  },\r\n  swipeRightContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    background: \"#ef5350\",\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  swipeRightAction: {\r\n    display:\"flex\",\r\n    alignItems: \"center\",\r\n    color: \"#fff\",\r\n    alignContent: \"flex-start\"\r\n  },\r\n  swipeIcon: {\r\n    margin: theme.spacing(0, 1)\r\n  },\r\n  swipeLeftContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    background: \"#1976d2\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  swipeLeftAction: {\r\n    display:\"flex\",\r\n    alignItems: \"center\",\r\n    color: \"#fff\",\r\n    alignContent: \"flex-end\",\r\n  },\r\n  snackBar: {\r\n\t\tposition: \"fixed\",\r\n\t\tbottom: theme.spacing(18)\r\n\t}\r\n}))\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"left\" ref={ref} {...props} />\r\n});\r\n\r\nexport default function Collection() {\r\n\r\n  const [open, setOpen] = useState(false)\r\n  const [openSnackbar, setOpenSnackbar] = useState(false)\r\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\")\r\n  const [snackbarUndoButton, setSnackbarUndoButton] = useState(false)\r\n  const [folderId, setFolderId] = useState(\"\")\r\n  const [folderName, setFolderName] = useState(\"\")\r\n  const [folderDesc, setFolderDesc] = useState(\"\")\r\n  const [showForm, setShowForm] = useState(false)\r\n  const classes = useStyles()\r\n  const folderData = useDetails()\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true)\r\n  }\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return\r\n    }\r\n    setOpen(false)\r\n    setOpenSnackbar(false)\r\n  }\r\n\r\n  const handleCloseSnackbar = () => {\r\n    setOpenSnackbar(false)\r\n  }\r\n\r\n  const handleUndoDelete = () => {\r\n\r\n    setOpenSnackbar(false)\r\n    setSnackbarUndoButton(false)\r\n\r\n    firebase.firestore()\r\n      .collection(\"collections\")\r\n      .doc(folderId)\r\n      .set({\r\n        folder_name: folderName,\r\n        folder_desc: folderDesc\r\n      }).then(() => {\r\n        console.log(\"Collection restored\")\r\n        setTimeout(() => {\r\n          setOpenSnackbar(true)\r\n          setSnackbarMessage(\"Collection restored\")\r\n        }, 300)\r\n      }).catch(err => {\r\n        console.error(\"Error restoring collection: \", err)\r\n      })\r\n  }\r\n\r\n  const handleLinkClick = (id, name) => {\r\n    setFolderId(id)\r\n    setFolderName(name)\r\n    handleClickOpen()\r\n  }\r\n\r\n  const handleDeleteCollection = (id, name, desc) => {\r\n    setFolderId(id)\r\n    setFolderName(name)\r\n    setFolderDesc(desc)\r\n    deleteCollection(id)\r\n\r\n    setSnackbarUndoButton(true)\r\n    setShowForm(false)\r\n    setSnackbarMessage(\"Collection successfully deleted\")\r\n    setOpenSnackbar(true)\r\n  }\r\n\r\n  const handleAddCollection = message => {\r\n    setSnackbarUndoButton(false)\r\n    setSnackbarMessage(message)\r\n    console.log({message})\r\n    setOpenSnackbar(true)\r\n  }\r\n\r\n  const handleEditCollection = (id, name, desc) => {\r\n    setFolderId(id)\r\n    setFolderName(name)\r\n    setFolderDesc(desc)\r\n    setShowForm(true)\r\n  }\r\n\r\n  const handleUpdateCollection = message => {\r\n    setSnackbarMessage(message)\r\n    console.log({message})\r\n    setOpenSnackbar(true)\r\n    setShowForm(false)\r\n  }\r\n\r\n  const collections = folderData.map(folder =>\r\n    <Grid item key={folder.folder_id}>\r\n      <SwipeableListItem\r\n        swipeLeft={{\r\n          content:\r\n            <div className={classes.swipeLeftContainer}>\r\n              <div className={classes.swipeLeftAction}>\r\n                <Typography variant=\"subtitle2\">Edit</Typography>\r\n                <EditIcon fontSize=\"large\" className={classes.swipeIcon}/>                \r\n              </div>\r\n            </div>,\r\n          action: () => handleEditCollection(folder.folder_id, folder.folder_name, folder.folder_desc),\r\n          actionAnimation: ActionAnimations.RETURN\r\n        }}\r\n        swipeRight={{\r\n          content: \r\n            <div className={classes.swipeRightContainer}>\r\n              <div className={classes.swipeRightAction}>\r\n                <DeleteIcon fontSize=\"large\" className={classes.swipeIcon}/>\r\n                <Typography variant=\"subtitle2\">Delete</Typography>\r\n                \r\n              </div>\r\n            </div>,\r\n          action: () => handleDeleteCollection(folder.folder_id, folder.folder_name, folder.folder_desc),\r\n          actionAnimation: ActionAnimations.REMOVE\r\n        }}\r\n        blockSwipe={folder.editable !== undefined ? true : false}\r\n      >\r\n        <ListItem button onClick={() => handleLinkClick(folder.folder_id, folder.folder_name)}>\r\n          <ListItemAvatar>\r\n            <Avatar className={classes.avatar}>\r\n              <FolderIcon className={classes.folderIcon} />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText\r\n            primary={<Typography variant=\"subtitle1\">{folder.folder_name}</Typography>}\r\n            secondary={folder.folder_desc}\r\n          />\r\n        </ListItem>\r\n      </SwipeableListItem>\r\n    </Grid>\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <Header title={\"Collection\"} />\r\n      <div className={classes.root}>\r\n        <Paper variant=\"outlined\" style={{borderRadius: 8}}>\r\n        <List>\r\n          <StackGrid \r\n            columnWidth=\"100%\"\r\n            gutterWidth={8}\r\n            gutterHeight={0}\r\n          >\r\n            {collections}\r\n          </StackGrid>\r\n        </List>\r\n        </Paper>\r\n        <Dialog fullScreen open={open} TransitionComponent={Transition}>\r\n          <Folder id={folderId} name={folderName} />\r\n          <AppBar position=\"fixed\" color=\"secondary\" className={classes.bottomAppBar}>\r\n            <Toolbar>\r\n              <IconButton edge=\"start\" color=\"inherit\" aria-label=\"open drawer\"\r\n                onClick={handleClose}\r\n              >\r\n                <ArrowBackIcon />\r\n              </IconButton>\r\n              <IconButton color=\"inherit\">\r\n                <SearchIcon />\r\n              </IconButton>\r\n              <IconButton edge=\"end\" color=\"inherit\">\r\n                <MoreIcon />\r\n              </IconButton>\r\n            </Toolbar>\r\n          </AppBar>\r\n        </Dialog>\r\n      </div>\r\n      <Snackbar\r\n        className={classes.snackBar}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={openSnackbar}\r\n        onClose={handleClose}\r\n        autoHideDuration={5000}\r\n        message={snackbarMessage}\r\n        action={\r\n          <>\r\n            {snackbarUndoButton ? (\r\n              <Button color=\"secondary\" aria-label=\"undo-delete\" onClick={handleUndoDelete}>\r\n                Undo\r\n              </Button>\r\n            ) : ( \"\" )}\r\n            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleCloseSnackbar}>\r\n              <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </>\r\n        }\r\n      />\r\n      <FormDialog mode={\"collection\"} onAdd={handleAddCollection} />\r\n      <EditFormDialog mode={\"collection\"} edit={showForm} onClose={setShowForm} onUpdate={handleUpdateCollection}\r\n        collection_id={folderId} folder_name={folderName} folder_desc={folderDesc}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction deleteCollection(id) {\r\n\r\n\tfirebase.firestore()\r\n\t\t.collection(\"collections\")\r\n\t\t.doc(id)\r\n\t\t.delete()\r\n\t\t.then(() =>\r\n\t\t\tconsole.log(\"Collection successfully deleted\")\r\n\t\t).catch((err) =>\r\n\t\t\tconsole.error(\"Error removing document: \", err)\r\n\t\t)\r\n}\r\n\r\nfunction useDetails() {\r\n\tconst [folderDetails, setFolderDetails] = useState([])\r\n\r\n\tuseEffect(() => {\r\n\t\tconst unsubscribe = firebase\r\n\t\t\t.firestore()\r\n\t\t\t.collection(\"collections\")\r\n\t\t\t.onSnapshot((snapshot) => {\r\n\t\t\t\tconst newDetails = snapshot.docs.map((doc) => ({\r\n\t\t\t\t\tfolder_id: doc.id,\r\n\t\t\t\t\t...doc.data()\r\n\t\t\t\t}))\r\n\t\t\t\tsetFolderDetails(newDetails)\r\n\t\t\t})\r\n        \r\n      return () => unsubscribe()\r\n    }, [])\r\n    \r\n    return folderDetails\r\n}","import React from \"react\";\r\nimport Header from \"../components/Header\";\r\n\r\nfunction Favorites() {\r\n    return (\r\n        <>\r\n            <Header title={\"Favorites\"} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Favorites;","import React, { useState } from \"react\"\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\r\nimport BottomNav from \"./components/BottomNav\"\r\nimport Home from \"./pages/Home\"\r\nimport Collection from \"./pages/Collection\"\r\nimport Favorites from \"./pages/Favorites\"\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport { createMuiTheme } from '@material-ui/core/styles'\r\nimport { ThemeProvider } from '@material-ui/styles'\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: '#e0e0e0',\r\n      main: '#37474f',\r\n      dark: '#102027',\r\n      contrastText: '#fff',\r\n    },\r\n    secondary: {\r\n      light: '#ffffa6',\r\n      main: '#dce775',\r\n      dark: '#a8b545',\r\n      contrastText: '#000',\r\n    },\r\n\t},\r\n\ttypography: {\r\n\t\tfontSize: 12,\r\n\t\tsubtitle1: {\r\n\t\t\tfontWeight: 700,\r\n\t\t\tcolor: \"#37474f\"\r\n\t\t},\r\n\t\th5: {\r\n\t\t\tfontWeight: 900,\r\n\t\t\tletterSpacing: \"0.04rem\"\r\n\t\t},\r\n\t\th6: {\r\n\t\t\tfontWeight: 900,\r\n\t\t\tcolor: '#37474f',\r\n\t\t\tletterSpacing: \"0.03rem\",\r\n\t\t\ttextTransform: \"uppercase\"\r\n\t\t}\r\n\t},\r\n\toverrides: {\r\n\t\tMuiBottomNavigationAction: {\r\n\t\t\troot: {\r\n\t\t\t\tcolor: \"#62727b\",\r\n\t\t\t\t\"&$selected\": {\r\n\t\t\t\t\tcolor: \"#dce775\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n})\r\n\r\nfunction App() {\r\n\r\n\tconst [tab, setTab] = useState(\"\")\r\n\r\n\treturn (\r\n\t\t<ThemeProvider theme={theme} >\r\n\t\t\t<Router basename=\"/link-library\">\r\n\t\t\t\t<CssBaseline />\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route exact path=\"/\">\r\n\t\t\t\t\t\t<Home />\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route path=\"/favorites\">\r\n\t\t\t\t\t\t<Favorites />\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route path=\"/collection\">\r\n\t\t\t\t\t\t<Collection />\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route path=\"/settings\">\r\n\t\t\t\t\t\t<Favorites />\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t</Switch>\r\n\t\t\t\t<BottomNav\r\n\t\t\t\t\tvalue={tab}\r\n\t\t\t\t\tonChange={setTab}\r\n\t\t\t\t/>\r\n\t\t\t</Router>\r\n\t\t</ThemeProvider>\r\n\t)\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./App\"\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"))"],"sourceRoot":""}